import React, {useState} from 'react';
import './App.css';
import Form from "./Form";
// @ts-ignore
import { motion } from "framer-motion";

const variants = {
    hidden: { opacity: 0 },
    visible: { opacity: 1 },
};

// @ts-ignore
const FormStep = ({ wordApi = '', textColorApi = '000000' }) => {
    const [src, setSrc] = useState(wordApi ?
        `//ntmaker.gfto.ru/newneontext/?image_height=${window.innerHeight}&image_width=${window.innerWidth}&image_font_shadow_width=30&image_font_size=100&image_background_color=000000&image_text_color=${textColorApi}&image_font_shadow_color=${textColorApi}&image_url=&image_text=${wordApi}&image_font_family=Nickainley&` :
        'about:blank'
    );
    const [data, setData] = useState({ word: wordApi, textColor: textColorApi });
    const [selectForm, setSelectForm] = useState(wordApi ? false : true);
    const [liked, setLiked] = useState(wordApi ? true : false);

    const setIframe = (word: any, textColor: any) => {
        setSrc(`//ntmaker.gfto.ru/newneontext/?image_height=${window.innerHeight}&image_width=${window.innerWidth}&image_font_shadow_width=30&image_font_size=100&image_background_color=000000&image_text_color=${textColor}&image_font_shadow_color=${textColor}&image_url=&image_text=${word}&image_font_family=Nickainley&`)
        setData({ word, textColor });
        if (word) {
            setSelectForm(false);
        }
    };

    const sendWord = () => {
        const formData = new FormData();

        formData.append('image_text', data.word);
        formData.append('image_text_color', data.textColor);

        fetch('http://kirdan.ru', {
            mode: 'no-cors',
            method: 'post',
            body: formData
        });
        setLiked(true);
    };

    const handleBack = () => {
        setSelectForm(true);
    };

    return (
        <div className="App">
            {!wordApi && selectForm &&
                <Form setIframe={setIframe} />
            }
            <div>
                {!selectForm && <motion.iframe
                    id='frame' src={src} frameBorder='no' scrolling='no' width={window.innerWidth} height={window.innerHeight}
                    initial="hidden" animate="visible" variants={variants} transition={{ duration: 2 }}
                />}
                <div className='buttons'>
                    {!selectForm && !wordApi && !liked &&
                    <motion.button onClick={handleBack} initial="hidden" animate="visible" variants={variants} transition={{ duration: 2 }}>–ù–∞–∑–∞–¥</motion.button>
                    }
                    {!selectForm && !wordApi && !liked &&
                    <motion.button onClick={sendWord} initial="hidden" animate="visible" variants={variants} transition={{ duration: 2 }}>–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è</motion.button>
                    }
                </div>
                {liked && <motion.p initial="hidden" animate="visible" variants={variants} transition={{ duration: 2 }}>
                    –ü–æ–º–Ω–∏—Ç—Å—è, —Ç—ã –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–∫–æ–ª—å–Ω–æ) –º—ã —Ç–æ–∂–µ —Ç–∞–∫ –ø–æ–¥—É–º–∞–ª–∏. –°–∫–æ—Ä–æ —É —Ç–µ–±—è –ø–æ—è–≤–∏—Ç—Å—è —Ç–∞–∫–∞—è –Ω–∞—Å—Ç–æ—è—â–∞—è! –ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç —Ç–µ–±—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ, –∫—É–¥–∞ —Ç—ã –µ–µ –ø–æ–≤–µ—Å–∏—à—å üòç –ö–ª–∞—Å—Å–Ω—ã–µ –º—ã?
                    –ü–æ–º–∏–º–æ —à—É—Ç–æ–∫, —Ö–æ—Ç–∏–º —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ä–∞–¥—ã –¥—Ä—É–∂–±–µ —Å —Ç–æ–±–æ–π, –∂–µ–ª–∞–µ–º –≥–∞—Ä–º–æ–Ω–∏–∏, –¥–∑–µ–Ω–∞, –æ—Ç–¥—ã—Ö–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∑–∞–¥–∞—á, –Ω–æ–≤—ã—Ö –º–µ—Å—Ç –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç–æ –≤—Å–µ–≥–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å. –ú—ã —Ä—è–¥–æ–º –∏ –æ—á–µ–Ω—å —Ç–µ–±—è –ª—é–±–∏–º‚ô•Ô∏è
                </motion.p>}
            </div>
        </div>
    );
}

export default FormStep;
