{"version":3,"sources":["DAN.JPG","ROB.mp4","Anna.jpg","natula.JPG","sana.jpg","Step.tsx","Form.tsx","FormStep.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","variants","hidden","opacity","visible","Step","data","handleClick","div","initial","animate","transition","duration","img","src","playsInline","video","fluid","height","width","Math","min","window","innerWidth","id","texts","map","text","index","key","onClick","Form","setIframe","useState","word","setWord","textColor","setTextColor","error","setError","className","type","onChange","e","target","value","required","defaultValue","slice","toUpperCase","FormStep","wordApi","textColorApi","innerHeight","setSrc","setData","selectForm","setSelectForm","liked","setLiked","iframe","frameBorder","scrolling","button","formData","FormData","append","fetch","mode","method","body","p","steps","logo","anna","sana","natul","vidos","fetched","App","step","setStep","setColor","then","a","json","res","image_text","image_text_color","catch","length","Boolean","location","hostname","match","console","log","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,iC,wCCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iSCOrCC,EAAW,CACbC,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,IAoBTE,EAhBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClB,OAAO,kBAAC,IAAOC,IAAR,CAAYC,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,IAC7FN,EAAKO,IACF,yBAAKC,IAAKR,EAAKO,MACf,kBAAC,SAAD,CAAQE,aAAW,EAACD,IAAKR,EAAKU,MAAOC,OAAO,EAAOC,OAAQ,IAAKC,MAAOC,KAAKC,IAAIC,OAAOC,WAAY,OAEtGjB,EAAKkB,IACF,2BAAG,mGAAH,2EAEFlB,EAAKkB,IAAMlB,EAAKmB,MAAMC,KACpB,SAACC,EAAWC,GAAZ,OAA2B,uBAAGC,IAAKD,GAAQD,MAE/C,4BAAQG,QAASvB,GAAjB,oCCpBFN,EAAW,CACbC,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,IA6CT4B,EAzCF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACfC,EADe,OAEMF,mBAAS,WAFf,mBAErBG,EAFqB,KAEVC,EAFU,OAGFJ,oBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,KAmB5B,OACI,kBAAC,IAAO/B,IAAR,CAAYgC,UAAU,OAAO/B,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,IACxG,kLACiC,kKAC7B,2BACIiB,IAAI,OACJY,KAAK,OACLC,SAZK,SAACC,GAClBR,EAAQQ,EAAEC,OAAOC,OACjBN,GAAUI,EAAEC,OAAOC,QAWPC,UAAQ,EACRN,UAAWF,EAAQ,QAAU,QAC7BS,aAAcb,KAGtB,6dAEI,2BAAOL,IAAI,QAAQY,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOC,QAAQE,aAAa,aAEhG,4BAAQjB,QA/BI,WACXI,EAKLF,EAAUE,EAAME,EAAUY,MAAM,GAAGC,eAJ/BV,GAAS,KA6BT,0CCzCNtC,EAAW,CACbC,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,IAkET+C,EA9DE,SAAC,GAA+C,IAAD,IAA5CC,eAA4C,MAAlC,GAAkC,MAA9BC,oBAA8B,MAAf,SAAe,IACtCnB,mBAASkB,EAAO,sDACa7B,OAAO+B,YAAc,GADlC,wBACoD/B,OAAOC,WAD3D,0GACuK6B,EADvK,oCAC+MA,EAD/M,kCACqPD,EADrP,kCAElC,eAHwD,mBACrDrC,EADqD,KAChDwC,EADgD,OAKpCrB,mBAAS,CAAEC,KAAMiB,EAASf,UAAWgB,IALD,mBAKrD9C,EALqD,KAK/CiD,EAL+C,OAMxBtB,oBAASkB,GANe,mBAMrDK,EANqD,KAMzCC,EANyC,OAOlCxB,qBAASkB,GAPyB,mBAOrDO,EAPqD,KAO9CC,EAP8C,KAmC5D,OACI,8BACMR,GAAWK,GACT,kBAAC,EAAD,CAAMxB,UA7BA,SAACE,EAAWE,GAC1BkB,EAAO,+CAAD,OAAgDhC,OAAO+B,YAAc,GAArE,wBAAuF/B,OAAOC,WAA9F,0GAA0Ma,EAA1M,oCAA+OA,EAA/O,kCAAkRF,EAAlR,mCACNqB,EAAQ,CAAErB,OAAME,cACZF,GACAuB,GAAc,MA2Bd,8BACMD,GAAc,kBAAC,IAAOI,OAAR,CACZpC,GAAG,QAAQV,IAAKA,EAAK+C,YAAY,KAAKC,UAAU,KAAK3C,MAAOG,OAAOC,WAAYL,OAAQI,OAAO+B,YAAc,GAC5G5C,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,KAEnF,yBAAK4B,UAAU,YACTgB,IAAeL,IAAYO,GAC7B,kBAAC,IAAOK,OAAR,CAAejC,QAhBZ,WACf2B,GAAc,IAekChD,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,IAAnH,mCAEE4C,IAAeL,IAAYO,GAC7B,kBAAC,IAAOK,OAAR,CAAejC,QAjCd,WACb,IAAMkC,EAAW,IAAIC,SAErBD,EAASE,OAAO,aAAc5D,EAAK4B,MACnC8B,EAASE,OAAO,mBAAoB5D,EAAK8B,WAEzC+B,MAAM,oBAAqB,CACvBC,KAAM,OACNC,OAAQ,OACRC,KAAMN,IAEVL,GAAS,IAsBqClD,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,IAAjH,wEAGH8C,GAAS,kBAAC,IAAOa,EAAR,CAAU9D,QAAQ,SAASC,QAAQ,UAAUT,SAAUA,EAAUU,WAAY,CAAEC,SAAU,IAAzF,k9DCjDpB4D,EAAe,CAAC,CAClB/C,MAAO,CACH,wCACA,gVAEJZ,IAAK4D,KAET,CACI5D,IAAK4D,IACLhD,MAAO,CAAC,gSAA2D,2HAA6B,mPACjG,CACCZ,IAAK6D,IACLjD,MAAO,CAAC,gNACT,CACCZ,IAAK8D,IACLnD,GAAI,QACJC,MAAO,CAAC,mOACT,CACCZ,IAAK+D,IACLnD,MAAO,CACH,wbACA,qwCACA,uVACA,gIACA,0CAEL,CACCT,MAAO6D,IACPpD,MAAO,CAAC,ggCACR,s0BACA,0RACD,CACCZ,IAAK4D,IACLhD,MAAO,CACH,s6EAEL,CACCZ,IAAK4D,IACLhD,MAAO,CACH,whBAAgH,+GAErH,CACCZ,IAAK4D,IACLhD,MAAO,CACH,4FAED,CACCZ,IAAK4D,IACLhD,MAAO,CACH,mYAEL,CACCZ,IAAK4D,IACLhD,MAAO,CACH,sPACA,kNAEL,CACCZ,IAAK4D,IACLhD,MAAO,CACH,syBAGRqD,GAAU,EAsCCC,EApCO,WAAO,IAAD,EACA9C,mBAAS,GADT,mBACjB+C,EADiB,KACXC,EADW,OAEAhD,mBAAS,IAFT,mBAEjBC,EAFiB,KAEXC,EAFW,OAGMF,mBAAS,UAHf,mBAGjBG,EAHiB,KAGN8C,EAHM,KAKnBJ,GACDX,MAAM,oBAAqB,CACvBC,KAAM,OACNC,OAAQ,SAEPc,KAJL,uCAIU,WAAM7E,GAAN,eAAA8E,EAAA,sEACgB9E,EAAK+E,OADrB,OACIC,EADJ,OAGFR,GAAU,EACV3C,EAAQmD,EAAIC,YACZL,EAASI,EAAIE,kBALX,2CAJV,uDAWKC,OAAM,eAQf,OAAO,yBAAKjD,UAAU,OAClB,8BACKwC,IAASR,EAAMkB,OACZ,kBAAC,EAAD,CAAUvC,QAASjB,EAAMkB,aAAchB,IACvC,kBAAC,EAAD,CAAM9B,KAAMkE,EAAMQ,GAAOzE,YARpB,WACb0E,EAAQD,EAAO,IAOyCnD,IAAKmD,KAG7D,iECrGYW,QACW,cAA7BrE,OAAOsE,SAASC,UAEe,UAA7BvE,OAAOsE,SAASC,UAEhBvE,OAAOsE,SAASC,SAASC,MACvB,2DCXNC,QAAQC,IAAI,yXAA8E,yDAC1FC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,kB","file":"static/js/main.c65e4a78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DAN.b33dcae3.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ROB.cf7ae728.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Anna.d53b6976.jpg\";","module.exports = __webpack_public_path__ + \"static/media/natula.861b01f4.JPG\";","module.exports = __webpack_public_path__ + \"static/media/sana.692a0628.jpg\";","import React from 'react';\nimport './App.css';\n// @ts-ignore\nimport { Player } from 'video-react';\n// @ts-ignore\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n};\n\n// @ts-ignore\nconst Step = ({ data, handleClick }) => {\n    return <motion.div initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}>\n        {data.img ?\n            <img src={data.img}/> :\n            <Player playsInline src={data.video} fluid={false} height={400} width={Math.min(window.innerWidth, 600)} />\n        }\n        {data.id &&\n            <p><s>Текст от Сани</s>. Цвети и пахни</p>\n        }\n        {!data.id && data.texts.map(\n            (text: any, index: any) => <p key={index}>{text}</p>\n        )}\n        <button onClick={handleClick}>Далее</button>\n    </motion.div>\n};\n\nexport default Step;\n","import React, { useState } from 'react';\nimport './App.css';\n// @ts-ignore\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n};\n\n// @ts-ignore\nconst Form = ({ setIframe }) => {\n    const [word, setWord] = useState('');\n    const [textColor, setTextColor] = useState('#dfff59');\n    const [error, setError] = useState(false);\n\n    const onTestClick = () => {\n        if (!word) {\n            setError(true);\n            return;\n        }\n\n        setIframe(word, textColor.slice(1).toUpperCase());\n    }\n\n    const onWordChange = (e: { target: { value: React.SetStateAction<string>; }; }) => {\n        setWord(e.target.value);\n        setError(!e.target.value);\n    }\n\n    return (\n        <motion.div className='form' initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}>\n            <label>\n                Поделись с нами этим словом. <b>Прямо здесь. Прямо сейчас.</b>\n                <input\n                    key='word'\n                    type='text'\n                    onChange={onWordChange}\n                    required\n                    className={error ? 'error' : 'valid'}\n                    defaultValue={word}\n                />\n            </label>\n            <label>\n                Неплохо. Как насчёт цветов? Когда ты видишь это слово. С каким цветом оно ассоциируется?\n                <input key='color' type='color' onChange={(e) => setTextColor(e.target.value)} defaultValue='#dfff59' />\n            </label>\n            <button onClick={onTestClick}>Дальше</button>\n        </motion.div>\n    );\n}\n\nexport default Form;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Form from \"./Form\";\n// @ts-ignore\nimport { motion } from \"framer-motion\";\n\nconst variants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n};\n\n// @ts-ignore\nconst FormStep = ({ wordApi = '', textColorApi = '000000' }) => {\n    const [src, setSrc] = useState(wordApi ?\n        `//ntmaker.gfto.ru/newneontext/?image_height=${window.innerHeight - 80}&image_width=${window.innerWidth}&image_font_shadow_width=30&image_font_size=100&image_background_color=000000&image_text_color=${textColorApi}&image_font_shadow_color=${textColorApi}&image_url=&image_text=${wordApi}&image_font_family=Nickainley&` :\n        'about:blank'\n    );\n    const [data, setData] = useState({ word: wordApi, textColor: textColorApi });\n    const [selectForm, setSelectForm] = useState(wordApi ? false : true);\n    const [liked, setLiked] = useState(wordApi ? true : false);\n\n    const setIframe = (word: any, textColor: any) => {\n        setSrc(`//ntmaker.gfto.ru/newneontext/?image_height=${window.innerHeight - 80}&image_width=${window.innerWidth}&image_font_shadow_width=30&image_font_size=100&image_background_color=000000&image_text_color=${textColor}&image_font_shadow_color=${textColor}&image_url=&image_text=${word}&image_font_family=Nickainley&`)\n        setData({ word, textColor });\n        if (word) {\n            setSelectForm(false);\n        }\n    };\n\n    const sendWord = () => {\n        const formData = new FormData();\n\n        formData.append('image_text', data.word);\n        formData.append('image_text_color', data.textColor);\n\n        fetch('https://kirdan.ru', {\n            mode: 'cors',\n            method: 'post',\n            body: formData\n        });\n        setLiked(true);\n    };\n\n    const handleBack = () => {\n        setSelectForm(true);\n    };\n\n    return (\n        <div>\n            {!wordApi && selectForm &&\n                <Form setIframe={setIframe} />\n            }\n            <div>\n                {!selectForm && <motion.iframe\n                    id='frame' src={src} frameBorder='no' scrolling='no' width={window.innerWidth} height={window.innerHeight - 80}\n                    initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}\n                />}\n                <div className='buttons'>\n                    {!selectForm && !wordApi && !liked &&\n                    <motion.button onClick={handleBack} initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}>Назад</motion.button>\n                    }\n                    {!selectForm && !wordApi && !liked &&\n                    <motion.button onClick={sendWord} initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}>Мне нравится</motion.button>\n                    }\n                </div>\n                {liked && <motion.p initial=\"hidden\" animate=\"visible\" variants={variants} transition={{ duration: 2 }}>\n                    Помнится, ты говорил, что это прикольно) мы тоже так подумали. Скоро у тебя появится такая настоящая! Надеемся, что она будет тебя вдохновлять и мотивировать в любом месте, куда ты ее повесишь 😍 Классные мы?\n                    Помимо шуток, хотим тебе сказать, что рады дружбе с тобой, желаем гармонии, дзена, отдыха, интересных задач, новых мест и удовольствия ото всего, что ты делаешь. Мы рядом и очень тебя любим♥️\n                </motion.p>}\n            </div>\n        </div>\n    );\n}\n\nexport default FormStep;\n","import React, { useState } from 'react';\n// @ts-ignore\nimport logo from './DAN.JPG';\n// @ts-ignore\nimport vidos from './ROB.mp4';\nimport './App.css';\n// @ts-ignore\nimport anna from './Anna.jpg';\n// @ts-ignore\nimport natul from './natula.JPG';\n// @ts-ignore\nimport sana from './sana.jpg';\n// @ts-ignore\nimport Step from \"./Step.tsx\";\nimport FormStep from \"./FormStep\";\n\nconst steps: any[] = [{\n    texts: [\n        'Даниил!',\n        'Общественное движение ДаНаСРА поздравляет Вас с Днём рождения.'\n    ],\n    img: logo\n},\n{\n    img: logo,\n    texts: ['Для начала мы хотим сказать тебе несколько тёплых слов.', 'Во-первых, мы тебя любим.', 'Во-вторых, каждому из нас есть что тебе сказать.']\n}, {\n    img: anna,\n    texts: ['Даня! Если б не ты, я б не закончила универ']\n}, {\n    img: sana,\n    id: 'sania',\n    texts: ['̶Т̶е̶к̶с̶т̶ ̶о̶т̶ ̶С̶а̶н̶и̶  Цвети и пахни']\n}, {\n    img: natul,\n    texts: [\n        'Я целый день делала этот сайтик и так толком и не придумала что хочу на нем рассказать.',\n        'Хочется сказать про то что все странно, но мы с тобой и так это знаем. Хочется наговорить кучу милашеств про то какой ты обалденный друг и человек и извиниться за то, что я не всегда такая. Хочется пожелать достигнуть всех вершин, но ты их и так достигнешь.',\n        'В итоге желаю тебе найти то, что ты ищешь. И никогда не изменять себе.',\n        'С Днём рождения, дорогой.',\n        'Натуля.'\n    ]\n}, {\n    video: vidos,\n    texts: ['А Роберт не умеет придумывать нормальные поздравления. Поэтому тут честно спизженный эпловский видос. Эпл же сделяль. Че б его не заюзать? Как говорится, вместо тысячи слов, посмотри видос по-братски))',\n    'Вообще, по видео видно, что путешествовать с тобой норм тема (ты же уже посмотрел видос?). Хорошо, что через неделю уже мы поедем дальше! Короче, много фигни написал уже)',\n    'Во-первых, мы тебя любим. Во-вторых тоже. Погнали дальше!']\n}, {\n    img: logo,\n    texts: [\n        'Конечно, ты знаешь, что мы не станем просто так дарить тебе подарок. Простой подарок. Например, прыжок с парашютом или носки - это все банально. Вообще это не подарок, это поздравление. Да и не поздравление, а приятные слова тебе. Ты успешен в работе, в саморазвитии, ты очень много думаешь. Постоянно. Плиз, сегодня просто расслабься и не пытайся рационализировать. Ты в руках надежных друзей, ну ты уже сам все понял. Все, что тебе надо сделать - это закрыть глаза... но не сейчас. Сначала дочитай.'\n    ]\n}, {\n    img: logo,\n    texts: [\n        'Тебе сегодня 24. Сколько ты успел? Что ожидал от этого возраста? Что получилось? Кажется, получилось многое)', 'Как ты себя ощущаешь?'\n    ]\n}, {\n    img: logo,\n    texts: [\n        'Поиграем в слова.'\n    ]\n    }, {\n        img: logo,\n        texts: [\n            'Если бы ты мог описать своё состояние одним словом, что это было бы за слово?'\n        ]\n    }, {\n        img: logo,\n        texts: [\n            'Выбери слово, которым бы ты описал своё будущее.',\n            'Выбери слово, которое тебя вдохновляет! '\n        ]\n    }, {\n        img: logo,\n        texts: [\n            'Это слово, которое тебе нравится. Оно красивое. Тебе нравится его слышать, произносить, видеть в книгах или в сообщениях от друзей... Оно заряжает и мотивирует.'\n        ]\n    }];\nlet fetched = false;\n\nconst App: React.FC = () => {\n    const [step, setStep] = useState(0);\n    const [word, setWord] = useState('');\n    const [textColor, setColor] = useState('000000');\n\n    if (!fetched) {\n        fetch('https://kirdan.ru', {\n            mode: 'cors',\n            method: 'post',\n        })\n            .then(async data => {\n                const res = await data.json();\n\n                fetched = true;\n                setWord(res.image_text);\n                setColor(res.image_text_color);\n            })\n            .catch(() => {\n            });\n    }\n\n    const nextStep = () => {\n        setStep(step + 1);\n    };\n\n    return <div className=\"App\">\n        <main>\n            {step === steps.length ?\n                <FormStep wordApi={word} textColorApi={textColor}/> :\n                <Step data={steps[step]} handleClick={nextStep} key={step} />\n            }\n        </main>\n        <footer>Created by danasra (c) 2019</footer>\n    </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/video-react/dist/video-react.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('%cДаня, не ломай ничего пожалуйста. Закрой консоль и получай удовольствие.', 'color: white; background-color: red; font-size: 16px;');\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}